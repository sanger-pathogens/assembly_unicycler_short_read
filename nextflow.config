// Config inheritance options
params {
    generic_config_base = "https://raw.githubusercontent.com/sanger-pathogens/nextflow-commons/"
    generic_config_version = "master"
    generic_config_url = ""
}
inherit_generic_config()

manifest {
    name            = 'assembly_unicycler_shortreads'
    author          = 'PAM Informatics'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/assembly_unicycler_shortreads'
    description     = 'Simple bacterial assembly and assembly QC'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version = '{{assembly_unicycler_short_read_version}}'
}

includeConfig "./assorted-sub-workflows/irods_extractor/subworkflows/irods.config"
includeConfig "./assorted-sub-workflows/mixed_input/subworkflows/mixed_input.config"

params {
    // Input options
    input = null
    mode = "normal"
    cutoff_auto = false
    lock_phred = false
    careful = false
    isolate = true
    spades_options = ""
    
    // Processing options
    unicycler_max_jobs = 100

    // Logging options
    monochrome_logs = false

    // Output options
    outdir = './results'
    cleanup_intermediate_files = true
}

process {
    maxRetries = params.max_retries

    withName:UNICYCLER{
        shell = ['/bin/bash', '-u'] // omitting default option -e (errexit; see https://tldp.org/LDP/abs/html/options.html)
    }
}

// Helper functions
def inherit_generic_config() {
    config_url = params.generic_config_url ? params.generic_config_url : "${params.generic_config_base}/${params.generic_config_version}/configs/nextflow.config"
    try {
        includeConfig "${config_url}"
    } catch (Exception e) {
        System.err.println("ERROR: Could not load generic config: ${config_url}")
        System.err.println("Encountered the following exception:")
        throw e
    }
}
