def testData = new File("test_data")
def inputs = new File(testData, "inputs")
def outputs = new File(testData, "outputs/quast")

def verifyOutputs = { outputDir ->
    def expectedDir = outputs
    def actualDir = new File(outputDir)

    println "\nPipeline run complete\nComparing `${expectedDir}` and `${actualDir}`..."

    assert Compare.dirsConform(expectedDir, actualDir, UnicyclerShortreadCompare.&compare) :
        "The pipeline output didn't match the expected output (generated in a previous pipeline run). See stderr for a more verbose report"
}

nextflow_process {

    name "Test Process QUAST"
    script "modules/quast.nf"
    process "QUAST"

    test("Should run without failures") {

        when {
            params {
                max_cpus   = "1"
                max_memory = "2.GB"
                max_time   = "1.h"
                outdir = "${outputDir}"
            }
            process {
                """
                input[0] = file("test_data/inputs/quast/test_id.assembly.fa")
                """
            }
        }

        then {
            assert process.success
            verifyOutputs("${outputDir}/quast")
        }

    }

}
